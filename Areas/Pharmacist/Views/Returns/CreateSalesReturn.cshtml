@model PharmacyInventorySystem.ViewModels.CreateReturnViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Create Sales Return";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    <div class="card-header bg-gradient-primary text-white d-flex align-items-center gap-2">
        <i class="bi bi-arrow-repeat"></i>
        <h2 class="mb-0">Sales Return</h2>
    </div>

    <form asp-action="ConfirmSalesReturn" method="post" class="bg-light p-4 rounded shadow-sm">
        <input type="hidden" asp-for="SaleID" />
        <input type="hidden" asp-for="ReturnType" />

        <table class="table table-striped table-bordered align-middle">
            <thead class="table-dark text-center">
                <tr>
                    <th>Product</th>
                    <th>Sold Qty</th>
                    <th>Unit Price</th>
                    <th>Return Qty</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.ReturnItems.Count; i++)
                {
                    <tr>
                        <td>
                            @Model.ReturnItems[i].ProductName
                            <input type="hidden" asp-for="ReturnItems[@i].ProductID" />
                            <input type="hidden" asp-for="ReturnItems[@i].ProductName" />
                        </td>
                        <td>
                            @Model.ReturnItems[i].MaxQuantity
                            <input type="hidden" asp-for="ReturnItems[@i].MaxQuantity" />
                        </td>
                        <td>
                            @Model.ReturnItems[i].UnitPrice.ToString("C")
                            <input type="hidden" asp-for="ReturnItems[@i].UnitPrice" />
                        </td>
                        <td>
                            <input type="number" min="0" max="@Model.ReturnItems[i].MaxQuantity"
                                   class="form-control return-qty" asp-for="ReturnItems[@i].ReturnQuantity" />
                            <span asp-validation-for="ReturnItems[@i].ReturnQuantity" class="text-danger"></span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="text-end me-3 mb-3">
            <strong>Total Return Cost:</strong> <span id="totalCost">0.00</span> EGP
        </div>

        <div class="text-center">
            <button type="submit" class="btn btn-success me-2">✔ Confirm Return</button>
            <a asp-action="Create" class="btn btn-secondary">⬅ Back</a>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function calculateTotal() {
            let total = 0;
            document.querySelectorAll("tbody tr").forEach(row => {
                let qty = parseFloat(row.querySelector(".return-qty")?.value || 0);
                let unit = parseFloat(row.querySelector("input[name*='UnitPrice']")?.value || 0);
                total += qty * unit;
            });
            document.getElementById("totalCost").innerText = total.toFixed(2);
        }

        document.querySelectorAll(".return-qty").forEach(input => {
            input.addEventListener("input", calculateTotal);
        });

        calculateTotal();
    </script>
}
