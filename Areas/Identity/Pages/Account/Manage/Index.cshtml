@page
@model PharmacyInventorySystem.Areas.Identity.Pages.Account.Manage.IndexModel
@{
    ViewData["Title"] = "Manage your account";
    Layout = "/Views/Shared/_Layout.cshtml";
}
<style>
    body.identity-manage-bg {
        background: #fff !important;
        min-height: 100vh;
    }
    .manage-tabs .list-group-item.active {
        background: linear-gradient(90deg, #43a047 60%, #009688 100%);
        color: #fff;
        border: none;
        transform: translateX(8px);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    .manage-tabs .list-group-item {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        border-left: 3px solid transparent;
    }
    .manage-tabs .list-group-item:hover {
        transform: translateX(4px);
        border-left: 3px solid #43a047;
    }
    .btn-modern {
        background: linear-gradient(90deg, #43a047 60%, #009688 100%);
        color: #fff;
        border: none;
        border-radius: 2rem;
        font-weight: 700;
        font-size: 1.08rem;
        box-shadow: 0 2px 12px 0 rgba(76,175,80,0.10);
        padding: 0.7rem 2.2rem;
        display: inline-flex;
        align-items: center;
        gap: 0.6rem;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
    }
    .btn-modern:hover {
        background: linear-gradient(90deg, #388e3c 60%, #00796b 100%);
        color: #fff;
        transform: translateY(-3px) scale(1.02);
        box-shadow: 0 8px 25px 0 rgba(76,175,80,0.2);
        filter: brightness(1.05);
    }
    .btn-modern:active {
        transform: translateY(1px) scale(0.98);
        box-shadow: 0 2px 8px 0 rgba(76,175,80,0.12);
        transition: all 0.1s ease-out;
    }
    .btn-modern::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.2) 50%, rgba(255,255,255,0) 100%);
        transform: translateX(-100%);
        transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    }
    .btn-modern:hover::before {
        transform: translateX(100%);
    }
    .btn-modern::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 5px;
        height: 5px;
        background: rgba(255, 255, 255, 0.5);
        opacity: 0;
        border-radius: 100%;
        transform: scale(1, 1) translate(-50%);
        transform-origin: 50% 50%;
    }
    .btn-modern:hover::after {
        animation: ripple 1s ease-out;
    }
    .btn-outline-modern {
        border: 2px solid #43a047;
        color: #43a047;
        background: #fff;
        border-radius: 2rem;
        font-weight: 700;
        font-size: 1.08rem;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: 0 2px 12px 0 rgba(76,175,80,0.08);
        display: inline-flex;
        align-items: center;
        gap: 0.6rem;
        position: relative;
        overflow: hidden;
    }
    .btn-outline-modern:hover {
        background: #43a047;
        color: #fff;
        transform: translateY(-3px) scale(1.02);
        box-shadow: 0 8px 25px 0 rgba(76,175,80,0.2);
        border-color: #43a047;
    }
    .btn-outline-modern:active {
        transform: translateY(1px) scale(0.98);
        box-shadow: 0 2px 8px 0 rgba(76,175,80,0.12);
        transition: all 0.1s ease-out;
    }
    .btn-outline-modern::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.2) 50%, rgba(255,255,255,0) 100%);
        transform: translateX(-100%);
        transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    }
    .btn-outline-modern:hover::before {
        transform: translateX(100%);
    }
    .btn-outline-modern::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 5px;
        height: 5px;
        background: rgba(67, 160, 71, 0.3);
        opacity: 0;
        border-radius: 100%;
        transform: scale(1, 1) translate(-50%);
        transform-origin: 50% 50%;
    }
    .btn-outline-modern:hover::after {
        animation: ripple 1s ease-out;
    }
    @@keyframes ripple {
        0% {
            transform: scale(0, 0);
            opacity: 0.5;
        }
        100% {
            transform: scale(100, 100);
            opacity: 0;
        }
    }
    #manageTabsContent > div {
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        display: none;
    }
    #manageTabsContent > div.active {
        opacity: 1;
        transform: translateY(0);
        display: block;
    }
    .form-control {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        border: 2px solid #e0e0e0;
    }
    .form-control:focus {
        border-color: #43a047;
        box-shadow: 0 0 0 0.2rem rgba(67, 160, 71, 0.15);
        transform: translateY(-1px);
    }
</style>
<div class="container d-flex align-items-center justify-content-center" style="min-height: 95vh;">
    <div class="card shadow-lg p-4" style="max-width: 750px; min-height: 600px; width: 100%; border-radius: 1.5rem;">
        <div class="d-flex flex-column align-items-center mb-4 w-100">
            <i class="bi bi-person-circle" style="font-size: 3rem; color: #43a047;"></i>
            <h2 class="mb-1 mt-2" style="color: #388e3c; font-weight: 700; text-align: center;">Manage your account</h2>
            <p class="text-muted mb-0" style="text-align: center;">Change your account settings</p>
            @if (!string.IsNullOrEmpty(Model.StatusMessage)) {
                var isError = Model.StatusMessage.ToLower().Contains("error") || Model.StatusMessage.ToLower().Contains("unexpected") || Model.StatusMessage.ToLower().Contains("must confirm") || Model.StatusMessage.ToLower().Contains("cannot");
                <div class="alert @(isError ? "alert-danger" : "alert-success") w-100 text-center mt-3 alert-dismissible fade show" role="alert">
                    @Model.StatusMessage
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
        </div>
        <div class="row">
            <div class="col-md-4 mb-3 mb-md-0">
                <div class="list-group manage-tabs" id="manageTabs">
                    <button type="button" class="list-group-item list-group-item-action d-flex align-items-center gap-2 active" data-tab="profile">
                        <i class="bi bi-person"></i> <span>Profile</span>
                    </button>
                    <button type="button" class="list-group-item list-group-item-action d-flex align-items-center gap-2" data-tab="change-password">
                        <i class="bi bi-lock"></i> <span>Change Password</span>
                    </button>
                    <button type="button" class="list-group-item list-group-item-action d-flex align-items-center gap-2" data-tab="email-settings">
                        <i class="bi bi-envelope"></i> <span>Email Settings</span>
                    </button>
                    <button type="button" class="list-group-item list-group-item-action d-flex align-items-center gap-2" data-tab="two-factor">
                        <i class="bi bi-shield-lock"></i> <span>Two-Factor Authentication</span>
                    </button>
                    <button type="button" class="list-group-item list-group-item-action text-danger d-flex align-items-center gap-2" data-tab="delete-account">
                        <i class="bi bi-trash"></i> <span>Delete Account</span>
                    </button>
                </div>
            </div>
            <div class="col-md-8">
                <div id="manageTabsContent">
                    <div data-content="profile" class="active" style="display:block;">
                        <h5 class="mb-3 d-flex align-items-center gap-2"><i class="bi bi-person"></i> <span>Profile</span></h5>
                        <form method="post" asp-page-handler="Profile">
                            <input type="hidden" name="activeTab" value="profile" />
                            <div asp-validation-summary="ModelOnly" class="text-danger mb-2"></div>
                            <div class="mb-3">
                                <label class="form-label">Username</label>
                                <input type="text" class="form-control" value="@User.Identity?.Name" readonly />
                            </div>
                            <div class="mb-3">
                                <label asp-for="ProfileInput.PhoneNumber" class="form-label"></label>
                                <input asp-for="ProfileInput.PhoneNumber" class="form-control" placeholder="Phone number" />
                                <span asp-validation-for="ProfileInput.PhoneNumber" class="text-danger"></span>
                            </div>
                            <button type="submit" class="btn btn-modern w-100 mb-2">Save</button>
                        </form>
                    </div>
                    <div data-content="change-password" style="display:none;">
                        <h5 class="mb-3 d-flex align-items-center gap-2"><i class="bi bi-lock"></i> <span>Change Password</span></h5>
                        <form method="post" asp-page-handler="ChangePassword">
                            <div asp-validation-summary="ModelOnly" class="text-danger mb-2"></div>
                            <div class="mb-3">
                                <label asp-for="ChangePasswordInput.OldPassword" class="form-label"></label>
                                <input asp-for="ChangePasswordInput.OldPassword" class="form-control" placeholder="Current password" />
                                <span asp-validation-for="ChangePasswordInput.OldPassword" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label asp-for="ChangePasswordInput.NewPassword" class="form-label"></label>
                                <input asp-for="ChangePasswordInput.NewPassword" class="form-control" placeholder="New password" />
                                <span asp-validation-for="ChangePasswordInput.NewPassword" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label asp-for="ChangePasswordInput.ConfirmPassword" class="form-label"></label>
                                <input asp-for="ChangePasswordInput.ConfirmPassword" class="form-control" placeholder="Confirm new password" />
                                <span asp-validation-for="ChangePasswordInput.ConfirmPassword" class="text-danger"></span>
                            </div>
                            <button type="submit" class="btn btn-modern w-100">Change Password</button>
                        </form>
                    </div>
                    <div data-content="email-settings" style="display:none;">
                        <h5 class="mb-3 d-flex align-items-center gap-2"><i class="bi bi-envelope"></i> <span>Email Settings</span></h5>
                        <form method="post" asp-page-handler="Email">
                            <div asp-validation-summary="ModelOnly" class="text-danger mb-2"></div>
                            <div class="mb-3">
                                <label asp-for="EmailInput.Email" class="form-label"></label>
                                <input asp-for="EmailInput.Email" class="form-control" />
                                <span asp-validation-for="EmailInput.Email" class="text-danger"></span>
                            </div>
                            <button type="submit" class="btn btn-modern w-100">Update Email</button>
                        </form>
                    </div>
                    <div data-content="two-factor" style="display:none;">
                        <h5 class="mb-3 d-flex align-items-center gap-2"><i class="bi bi-shield-lock"></i> <span>Two-Factor Authentication</span></h5>
                        <div class="mb-3">
                            <span class="fw-bold">Status:</span>
                            @if (Model.Is2faEnabled)
                            {
                                <span class="badge bg-success ms-2">Enabled</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary ms-2">Disabled</span>
                            }
                        </div>
                        <div class="mb-3">
                            <span class="fw-bold">Recovery Codes Left:</span>
                            <span class="ms-2">@Model.RecoveryCodesLeft</span>
                        </div>

                        @if (Model.Is2faSetupInProgress)
                        {
                            <div class="card p-3 mb-3 bg-light border">
                                <h6>Set up your Authenticator App</h6>
                                <div class="mb-2">
                                    <img src="https://chart.googleapis.com/chart?cht=qr&chs=200x200&chl=@(Uri.EscapeDataString(Model.AuthenticatorUri))" alt="QR Code for Authenticator App" />
                                </div>
                                <div class="mb-2">
                                    <span class="fw-bold">Secret Key:</span>
                                    <input id="secretKey" class="form-control d-inline-block w-auto" value="@Model.SharedKey" readonly style="font-family:monospace; font-size:1rem;" />
                                    <button type="button" class="btn btn-outline-secondary btn-sm ms-2" onclick="copySecretKey()">Copy</button>
                                </div>
                                <div class="alert alert-info mt-2">
                                    Scan the QR code or enter the secret key in your authenticator app (like Google Authenticator). Then enter the 6-digit code below to complete setup.
                                </div>
                                <form method="post" asp-page-handler="Confirm2fa">
                                    <div class="mb-3">
                                        <label for="TwoFactorCode" class="form-label">Authenticator Code</label>
                                        <input type="text" name="TwoFactorCode" class="form-control" maxlength="6" autocomplete="one-time-code" required />
                                    </div>
                                    <button type="submit" class="btn btn-success w-100">Confirm 2FA Setup</button>
                                </form>
                            </div>
                        }
                        else if (!Model.Is2faEnabled)
                        {
                            <form method="post" asp-page-handler="Enable2fa">
                                <button type="submit" class="btn btn-modern w-100 mb-2">Enable 2FA</button>
                            </form>
                        }
                        else
                        {
                            <div class="d-flex flex-wrap gap-2 mb-3">
                                <form method="post" asp-page-handler="Disable2fa">
                                    <button type="submit" class="btn btn-outline-danger">Disable 2FA</button>
                                </form>
                                <form method="post" asp-page-handler="GenerateRecoveryCodes">
                                    <button type="submit" class="btn btn-outline-modern">Generate New Recovery Codes</button>
                                </form>
                            </div>
                        }
                        <div class="alert alert-info">Use an authenticator app (like Google Authenticator) to scan the QR code or enter the key when setting up 2FA for the first time. Recovery codes can be used if you lose access to your authenticator.</div>
                    </div>
                    <div data-content="delete-account" style="display:none;">
                        <h5 class="mb-3 text-danger d-flex align-items-center gap-2"><i class="bi bi-trash"></i> <span>Delete Account</span></h5>
                        <div class="alert alert-danger">This action is irreversible. Deleting your account will remove all your data permanently.</div>
                        <form method="post" asp-page-handler="DeleteAccount">
                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" asp-for="ConfirmDelete" id="confirmDeleteCheck">
                                <label class="form-check-label" for="confirmDeleteCheck">I understand and want to delete my account</label>
                            </div>
                            <button type="submit" class="btn btn-danger w-100" style="border-radius:2rem;font-weight:700;font-size:1.08rem;transition:background 0.2s, color 0.2s, box-shadow 0.2s, transform 0.2s;box-shadow:0 2px 12px 0 rgba(244,67,54,0.10);">Delete My Account</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <a asp-area="Manager" asp-controller="Home" asp-action="Dashboard" class="btn btn-outline-modern w-100 mt-4">
            <i class="bi bi-arrow-left me-2"></i>Back to Dashboard
        </a>
    </div>
</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.body.classList.add('identity-manage-bg');
        // On load, ensure only the active tab content is visible
        var activeTab = '@(ViewContext.HttpContext.Request.HasFormContentType ? ViewContext.HttpContext.Request.Form["activeTab"] : "profile")';
        document.querySelectorAll('#manageTabs .list-group-item-action').forEach(function(btn) {
            if (btn.getAttribute('data-tab') === activeTab) {
                btn.classList.add('active');
            } else {
                btn.classList.remove('active');
            }
        });
        document.querySelectorAll('#manageTabsContent > div').forEach(function(content) {
            if (content.getAttribute('data-content') === activeTab) {
                content.classList.add('active');
                content.style.display = 'block';
            } else {
                content.classList.remove('active');
                content.style.display = 'none';
            }
        });
        document.querySelectorAll('#manageTabs .list-group-item-action').forEach(function(btn) {
            btn.addEventListener('click', function() {
                document.querySelectorAll('#manageTabs .list-group-item-action').forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                var tab = this.getAttribute('data-tab');
                // Find the currently active content
                var currentActive = document.querySelector('#manageTabsContent > div.active');
                var nextActive = document.querySelector(`#manageTabsContent > div[data-content="${tab}"]`);
                if (currentActive !== nextActive) {
                    // Remove active from current, animate out
                    currentActive.classList.remove('active');
                    setTimeout(() => {
                        currentActive.style.display = 'none';
                        // Show and animate in the next
                        nextActive.style.display = 'block';
                        // Force reflow
                        nextActive.offsetHeight;
                        nextActive.classList.add('active');
                    }, 400); // Match transition duration
                }
            });
        });
        document.addEventListener('DOMContentLoaded', function() {
            var forms = document.querySelectorAll('form');
            forms.forEach(function(form) {
                form.addEventListener('submit', function() {
                    setTimeout(function() {
                        window.location.reload();
                    }, 500);
                });
            });
            // Redirect to clean URL if ?handler= is present
            if (window.location.search.includes('handler=')) {
                window.location.replace(window.location.pathname);
            }
        });
        function copySecretKey() {
            var input = document.getElementById('secretKey');
            input.select();
            input.setSelectionRange(0, 99999); // For mobile devices
            document.execCommand('copy');
        }
    </script>
} 