@using Microsoft.AspNetCore.Identity
@using PharmacyInventorySystem.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var isIdentityPage = Context.Request.Path.StartsWithSegments("/Identity");
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Pharmacy Inventory System</title>
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Tajawal:wght@400;500;700&display=swap" rel="stylesheet">
    
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    
    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    
    @await RenderSectionAsync("Styles", required: false)
</head>

<body class="@(isIdentityPage ? "identity-page" : null)">
    @if (isIdentityPage)
    {
        <div class="identity-bg-shapes">
            <div class="blob1"></div>
            <div class="blob2"></div>
            <div class="blob3"></div>
            <div class="blob4"></div>
            <!-- Animated pharmacy icons -->
            <!-- Pill -->
            <svg class="icon-pill" viewBox="0 0 60 60" fill="none"><ellipse cx="30" cy="30" rx="28" ry="14" fill="#43a047"/><rect x="10" y="18" width="40" height="24" rx="12" fill="#fff" opacity=".7"/></svg>
            <!-- Capsule -->
            <svg class="icon-capsule" viewBox="0 0 70 70" fill="none"><rect x="10" y="20" width="50" height="30" rx="15" fill="#00bfae"/><rect x="10" y="20" width="25" height="30" rx="15" fill="#fff" opacity=".7"/></svg>
            <!-- Cross -->
            <svg class="icon-cross" viewBox="0 0 55 55" fill="none"><rect x="22" y="5" width="11" height="45" rx="5.5" fill="#43a047"/><rect x="5" y="22" width="45" height="11" rx="5.5" fill="#43a047"/></svg>
            <!-- Leaf -->
            <svg class="icon-leaf" viewBox="0 0 65 65" fill="none"><path d="M10 55 Q32 10 55 30 Q40 60 10 55 Z" fill="#8bc34a"/></svg>
            <!-- Stethoscope -->
            <svg class="icon-stethoscope" viewBox="0 0 70 70" fill="none"><circle cx="20" cy="50" r="10" fill="#009688"/><rect x="18" y="20" width="4" height="30" rx="2" fill="#009688"/><path d="M22 20 Q35 10 50 20 T60 40" stroke="#009688" stroke-width="4" fill="none"/><circle cx="60" cy="40" r="6" fill="#4fc3f7"/></svg>
        </div>
    }

    @if (!isIdentityPage)
    {
        <div class="edge-grabber" id="edgeGrabber" tabindex="0" aria-label="Open sidebar by swipe or tap">
            <div class="edge-grabber-bar"></div>
        </div>
        <!-- No sidebar toggle button: open sidebar by swipe/drag from left edge on mobile -->
        <!-- Sidebar Navigation -->
        <div class="sidebar hide" id="sidebar">
            <div class="sidebar-header">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="bi bi-capsule-pill me-2"></i>
                    Pharmacy Inventory
                </a>
            </div>
            
            <div class="sidebar-content">
                <div class="user-info">
                    @if (SignInManager.IsSignedIn(User))
                    {
                        var user = await UserManager.GetUserAsync(User);
                        var fullName = user?.FullName ?? user?.UserName ?? "";
                        var role = User.IsInRole("Manager") ? "Manager" : (User.IsInRole("Pharmacist") ? "Pharmacist" : "");
                        <div class="user-profile">
                            <div class="user-avatar">
                                <i class="bi bi-person-circle"></i>
                            </div>
                            <div class="user-details">
                                <h6 class="user-name"><span>@fullName</span></h6>
                                <span class="user-role">@role</span>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="user-profile">
                            <div class="user-avatar">
                                <i class="bi bi-person-circle"></i>
                            </div>
                            <div class="user-details">
                                <h6 class="user-name"><span>Guest</span></h6>
                                <span class="user-role">Not signed in</span>
                            </div>
                        </div>
                    }
                </div>

                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index">
                            <i class="bi bi-house-door me-2"></i>Home
                        </a>
                    </li>
                    
                    @if (SignInManager.IsSignedIn(User))
                    {
                        if (User.IsInRole("Pharmacist"))
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="Pharmacist" asp-controller="Home" asp-action="Dashboard">
                                    <i class="bi bi-speedometer2 me-2"></i>Dashboard
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link no-spa" asp-area="Pharmacist" asp-controller="Sales" asp-action="Create">
                                    <i class="bi bi-cart-plus me-2"></i>Create Sale
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="Pharmacist" asp-controller="Returns" asp-action="Create">
                                    <i class="bi bi-arrow-return-left me-2"></i>Manage Returns
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="Pharmacist" asp-controller="SupplierOrders" asp-action="Create">
                                    <i class="bi bi-truck me-2"></i>Supplier Orders
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="Pharmacist" asp-controller="SupplierContact" asp-action="Index">
                                    <i class="bi bi-envelope me-2"></i>Contact Suppliers
                                </a>
                            </li>
                        }
                        else if (User.IsInRole("Manager"))
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="Manager" asp-controller="Home" asp-action="Dashboard">
                                    <i class="bi bi-speedometer2 me-2"></i>Dashboard
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="Manager" asp-controller="Supplier" asp-action="Index">
                                    <i class="bi bi-truck me-2"></i>Manage Suppliers
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="Manager" asp-controller="Category" asp-action="Index">
                                    <i class="bi bi-tags me-2"></i>Manage Categories
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="Manager" asp-controller="ManagerSupplierOrder" asp-action="Index">
                                    <i class="bi bi-clipboard-check me-2"></i>Manage Orders
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="Manager" asp-controller="ReturnsReport" asp-action="Index">
                                    <i class="bi bi-arrow-repeat me-2"></i>Manage Returns
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="Manager" asp-controller="SalesReport" asp-action="Index">
                                    <i class="bi bi-graph-up me-2"></i>Sales Reports
                                </a>
                            </li>
                        }
                    }
                    
                    <li class="nav-item">
                        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Privacy">
                            <i class="bi bi-shield-lock me-2"></i>Privacy
                        </a>
                    </li>
                </ul>
            </div>
            
            <div class="sidebar-footer">
                <partial name="_LoginPartial" />
            </div>
        </div>
        <div class="sidebar-overlay d-md-none" id="sidebarOverlay" style="display:none;position:fixed;top:0;left:0;width:100vw;height:100vh;z-index:1049;background:rgba(0,0,0,0.08);"></div>
    }

    <!-- Main Content -->
    @if (!isIdentityPage)
    {
        <div class="main-content">
            <main role="main" class="pb-3">
                @RenderBody()
            </main>
            <footer class="footer text-muted py-4">
                <div class="container-fluid">
                    <div class="row align-items-center">
                        <div class="col-md-6 text-center text-md-start">
                            &copy; @DateTime.Now.Year - Pharmacy Inventory System
                        </div>
                        <div class="col-md-6 text-center text-md-end">
                            <a asp-area="" asp-controller="Home" asp-action="Privacy" class="text-decoration-none text-muted">
                                <i class="bi bi-shield-lock me-1"></i>Privacy
                            </a>
                        </div>
                    </div>
                </div>
            </footer>
        </div>
    }
    else
    {
        @RenderBody()
    }

    <!-- Scripts -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <!-- Chart.js, DataTables, and plugins loaded globally for SPA navigation (BEFORE site.js) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.print.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <!-- site.js must come LAST -->
    <script src="~/js/site.js" asp-append-version="true"></script>
    
    <script>
        // Sidebar toggle for mobile/tablet
        const sidebar = document.getElementById('sidebar');
        const edgeGrabber = document.getElementById('edgeGrabber');
        const sidebarOverlay = document.getElementById('sidebarOverlay');
        
        if (sidebar && edgeGrabber && sidebarOverlay) {
            // Edge grabber click handler
            edgeGrabber.addEventListener('click', function() {
                sidebar.classList.remove('hide');
                sidebar.classList.add('show');
                sidebarOverlay.style.display = 'block';
            });
            
            // Overlay click handler
            sidebarOverlay.addEventListener('click', function() {
                sidebar.classList.remove('show');
                sidebar.classList.add('hide');
                sidebarOverlay.style.display = 'none';
            });
        }

        // Auto-refresh functionality for all sections
        document.addEventListener('DOMContentLoaded', function() {
            // List of sections that need auto-refresh
            const autoRefreshSections = [
                // Manager sections
                '/Manager/Home/Dashboard',
                '/Manager/Supplier/Index',
                '/Manager/Category/Index',
                '/Manager/ManagerSupplierOrder/Index',
                '/Manager/ReturnsReport/Index',
                '/Manager/SalesReport/Index',
                
                // Pharmacist sections
                '/Pharmacist/Home/Dashboard',
                '/Pharmacist/Sales/Create',
                '/Pharmacist/Sales/NewSaleInvoice',
                '/Pharmacist/Returns/Create',
                '/Pharmacist/SupplierOrders/Create',
                '/Pharmacist/SupplierContact/Index'
            ];

            // Function to initialize DataTables
            function initDataTables() {
                $('.datatable').each(function() {
                    if (!$.fn.DataTable.isDataTable(this)) {
                        $(this).DataTable({
                            responsive: true,
                            dom: 'Bfrtip',
                            buttons: ['copy', 'csv', 'excel', 'print'],
                            pageLength: 10
                        });
                    }
                });
            }

            // Function to initialize Charts
            function initCharts() {
                // Supplier Orders Chart
                const supplierChart = document.getElementById('supplierChart');
                if (supplierChart && window.Chart) {
                    const labels = JSON.parse(supplierChart.getAttribute('data-labels') || '[]');
                    const data = JSON.parse(supplierChart.getAttribute('data-data') || '[]');
                    if (window.supplierChartInstance) {
                        window.supplierChartInstance.destroy();
                    }
                    const ctx = supplierChart.getContext('2d');
                    window.supplierChartInstance = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Number of Orders',
                                data: data,
                                backgroundColor: 'rgba(67, 160, 71, 0.6)',
                                borderColor: 'rgba(67, 160, 71, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: { stepSize: 1 }
                                }
                            }
                        }
                    });
                }

                // Sales Chart
                const salesChart = document.getElementById('salesChart');
                if (salesChart && window.Chart) {
                    const labels = JSON.parse(salesChart.getAttribute('data-labels') || '[]');
                    const data = JSON.parse(salesChart.getAttribute('data-data') || '[]');
                    if (window.salesChartInstance) {
                        window.salesChartInstance.destroy();
                    }
                    const ctx = salesChart.getContext('2d');
                    window.salesChartInstance = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Total Sales (EGP)',
                                data: data,
                                borderColor: '#0d6efd',
                                backgroundColor: 'rgba(13, 110, 253, 0.1)',
                                tension: 0.3,
                                fill: true
                            }]
                        },
                        options: {
                            responsive: true,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        callback: value => value + ' EGP'
                                    }
                                }
                            }
                        }
                    });
                }

                // Returns Chart
                const returnChart = document.getElementById('returnChart');
                if (returnChart && window.Chart) {
                    const labels = JSON.parse(returnChart.getAttribute('data-labels') || '[]');
                    const data = JSON.parse(returnChart.getAttribute('data-data') || '[]');
                    if (window.returnChartInstance) {
                        window.returnChartInstance.destroy();
                    }
                    const ctx = returnChart.getContext('2d');
                    window.returnChartInstance = new Chart(ctx, {
                        type: 'doughnut',
                        data: {
                            labels: labels,
                            datasets: [{
                                data: data,
                                backgroundColor: ['#0dcaf0', '#ffc107'],
                                borderColor: ['#0dcaf0', '#ffc107'],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: { position: 'top' }
                            }
                        }
                    });
                }
            }

            // Function to initialize all components
            function initializeComponents() {
                initDataTables();
                initCharts();
            }

            // Initialize components on page load
            initializeComponents();

            // Set up MutationObserver to watch for content changes
            const mainContent = document.querySelector('.main-content');
            if (mainContent) {
                const observer = new MutationObserver((mutations) => {
                    mutations.forEach((mutation) => {
                        if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
                            // Check if we're in a section that needs auto-refresh
                            const currentPath = window.location.pathname;
                            if (autoRefreshSections.some(section => currentPath.includes(section))) {
                                initializeComponents();
                            }
                        }
                    });
                });

                observer.observe(mainContent, {
                    childList: true,
                    subtree: true
                });
            }

            // Remove old forEach nav-link click handler
            // Add event delegation for nav-link clicks
            document.addEventListener('click', function(e) {
                const link = e.target.closest('.nav-link');
                if (!link) return;
                const href = link.getAttribute('href');
                if (!href) return;
                if (autoRefreshSections.some(section => href.toLowerCase().includes(section.toLowerCase()))) {
                    console.log('[Quick Refresh] Full reload triggered for:', href);
                    e.preventDefault();
                    setTimeout(() => {
                        window.location.href = href;
                    }, 100);
                }
            });

            // Call page-specific initializer
            if (window.initManagerSupplierOrderPage) window.initManagerSupplierOrderPage();
            if (window.initNewSaleInvoice) window.initNewSaleInvoice();
        });

        document.addEventListener('click', function(e) {
            const link = e.target.closest('a.no-spa');
            if (link) {
                e.preventDefault();
                // Use window.location.replace for a guaranteed full reload
                window.location.replace(link.href);
            }
        });
    </script>
    
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
